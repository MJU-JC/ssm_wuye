<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.FeeTypeMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加费用类别记录 -->
	<insert id="addFeeType" parameterType="feeType">
		insert into t_feeType(typeName) values 
		(#{typeName})
	</insert>

	<!-- 按照查询条件分页查询费用类别记录 -->
	<select id="queryFeeType" resultMap="feeTypeMap" >
		select t_feeType.* from t_feeType ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="feeTypeMap" type="feeType">
        <id property="typeId" column="typeId" />
    </resultMap>

    <!-- 按照查询条件查询所有费用类别记录 -->
	<select id="queryFeeTypeList" resultMap="feeTypeMap" >
		select t_feeType.* from t_feeType ${where}
	</select>

    <!-- 按照查询条件的费用类别记录数 -->
	<select id="queryFeeTypeCount" resultType="int">
		select count(*) from t_feeType ${where}
	</select>

	<!-- 根据主键查询某个费用类别记录 -->
	<select id="getFeeType" parameterType="int" resultMap="feeTypeMap">
		select * from t_feeType where t_feeType.typeId = #{typeId}
	</select>

	<!-- 更新费用类别记录 -->
	<update id="updateFeeType" parameterType="feeType">
		update t_feeType set typeName=#{typeName} where typeId = #{typeId}
	</update>

	<!-- 删除费用类别记录 -->
	<delete id="deleteFeeType" parameterType="int">
		delete from t_feeType where typeId=#{typeId}
	</delete>

</mapper>
